name: Build and Test
on: push

env:
  RUST_VERSION: 1.81.0

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-D warnings"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Rust
        run: |
          rustup update ${{ env.RUST_VERSION }} && rustup default ${{ env.RUST_VERSION }} && rustup component add rustfmt --toolchain ${{ env.RUST_VERSION }} && rustup component add clippy --toolchain ${{ env.RUST_VERSION }}

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Cache Cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Check
        run: cargo check --workspace --tests --benches --all-features

      - name: Check Formatting
        run: cargo fmt --all -- --check

      - name: Run Clippy
        run: cargo clippy --all-targets --all-features

      - name: Run test
        run: cargo test --workspace --all-features
  # vet:
  #   name: Vet Dependencies
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: Install Rust
  #     uses: actions-rs/toolchain@v1
  #     with:
  #       profile: minimal
  #       toolchain: ${{ env.RUST_VERSION }}
  #       override: true
  #   - uses: actions-rs/cargo@v1
  #     with:
  #       command: build
  #   - uses: actions/cache@v3
  #     with:
  #       path: |
  #         ~/.cargo/registry/index/
  #         ~/.cargo/registry/cache/
  #         ~/.cargo/git/db/
  #         target/
  #       key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  #   - name: Install cargo-vet
  #     run: cargo install cargo-vet --version ${{ env.CARGO_VET_VERSION }} --git ${{ env.CARGO_VET_REPO }}
  #   - name: Prune (If some import got updated)
  #     run: cargo vet prune
  #   - name: Invoke cargo-vet
  #     run: cargo vet
